# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
df <- m_wdeg
sample <- "Males"
OTUstGraph <- function (df,sample){
z = data.frame("X"=NULL,"N"=NULL,"P"=NULL,"V"=NULL)
for (i in seq(1,ncol(t(df)))){
x = t(df[i,])
f <- sort(x[2:length(x)],decreasing=T)[1]
fn <- rownames(x)[which(x %in% f)[1]]
s <- sort(x[2:length(x)],decreasing=T)[2]
sn <- rownames(x)[which(x %in% s)[1]]
t <- sort(x[2:length(x)],decreasing=T)[3]
tn <- rownames(x)[which(x %in% t)[1]]
l <- sort(x[2:length(x)],decreasing=F)
l <- l[min( which ( l != 0 )) : max( which( l != 0 ))][1]
ln <- rownames(x)[match(x[grep(l,x)],x)][1]
k = data.frame("X"=rep(x[1],4),"N"=c(fn,sn,tn,ln),"P"=c("F","S","T","L"),"V"=c(f,s,t,l))
z <- rbind(z,k)
}
maxS <- sort(z$V[z$P=="F"],decreasing=T)[1]
maxS <- which(z$V %in% maxS)[1]
z[maxS,1]
minS <- sort(z$V[z$P=="F"],decreasing=F)[1]
maxS <- which(z$V %in% minS)[1]
z[minS,1]
m <- melt(df,id.vars=c("X"))
pdf(paste("Best5p_TopOTUstrength",sample,".pdf",sep=""), pointsize = 12, width = 10 , height = 7 )
ggplot(data=m)+geom_line(aes(x=z$X,y=z$V,group=z$P,colour=z$P))+geom_point(aes(x=z$X,y=z$V,colour=z$P),size=1.5)+
ylab("Strength")+xlab("Window age mean")+ggtitle(paste(sample," - OTU with highest strength",sep=""))+#scale_y_discrete(labels="")+
scale_colour_discrete(name="Positions",breaks=c("F", "S","T", "L"),labels=c("First","Second","Thirth","Last"))
dev.off()
pdf(paste("Best5p_AllOTUstrength",sample,".pdf",sep=""), pointsize = 12, width = 10 , height = 7 )
ggplot(data=m,aes(x=X,y=value,group=variable,colour=variable))+geom_line()+geom_point(size=1.5)+
ylab("Strength")+xlab("Window age mean")+theme(legend.position="none")+ggtitle(paste(sample," - Strength by OTU",sep=""))
dev.off()
}
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdSE <- summarySE(f_wdegt,measurevar="value",groupvars=c("X"))
f_wdSE$"gender" <- rep("female",NROW(f_wdSE))
wdSE <- rbind(m_wdSE,f_wdSE)
pdf("Best5p_strength.pdf", pointsize = 12, width = 10 , height = 7 )
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
dev.off()
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
head(wdSE)
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdSE <- summarySE(f_wdegt,measurevar="value",groupvars=c("X"))
f_wdSE$"gender" <- rep("female",NROW(f_wdSE))
wdSE <- rbind(m_wdSE,f_wdSE)
head(wdSE)
summarySE <- function(data=NULL, measurevar, groupvars=NULL, na.rm=FALSE,
conf.interval=.95, .drop=TRUE) {
library(plyr)
# New version of length which can handle NA's: if na.rm==T, don't count them
length2 <- function (x, na.rm=FALSE) {
if (na.rm) sum(!is.na(x))
else       length(x)
}
# This does the summary. For each group's data frame, return a vector with
# N, mean, and sd
datac <- ddply(data, groupvars, .drop=.drop,
.fun = function(xx, col) {
c(N    = length2(xx[[col]], na.rm=na.rm),
mean = mean   (xx[[col]], na.rm=na.rm),
sd   = sd     (xx[[col]], na.rm=na.rm)
)
},
measurevar
)
# Rename the "mean" column
datac <- rename(datac, c("mean" = measurevar))
datac$se <- datac$sd / sqrt(datac$N)  # Calculate standard error of the mean
# Confidence interval multiplier for standard error
# Calculate t-statistic for confidence interval:
# e.g., if conf.interval is .95, use .975 (above/below), and use df=N-1
ciMult <- qt(conf.interval/2 + .5, datac$N-1)
datac$ci <- datac$se * ciMult
return(datac)
}
m_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
f_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_females_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
head(m_wdeg[,1:5])
qplot(x=m_wdeg$'X',y=m_wdeg[,4],data=m_wdeg,geom="line")
qplot(x=f_wdeg$'X',y=f_wdeg[,4],data=f_wdeg,geom="line")
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdSE <- summarySE(f_wdegt,measurevar="value",groupvars=c("X"))
f_wdSE$"gender" <- rep("female",NROW(f_wdSE))
wdSE <- rbind(m_wdSE,f_wdSE)
head(wdSE)
library(ggplot2)
library(reshape)
library(reshape2)
library(scales)
library(ade4)
library(RColorBrewer)
library(plyr)
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
f_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_females_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
head(m_wdm)
head(m_wdeg)
m_wdeg[is.na(m_wdeg)] <- 0
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
head(m_wdm)
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
f_wdeg[is.na(m_wdeg)] <- 0
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_females_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
m_wdeg[is.na(m_wdeg)] <- 0
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
f_wdeg[is.na(f_wdeg)] <- 0
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdSE <- summarySE(f_wdegt,measurevar="value",groupvars=c("X"))
f_wdSE$"gender" <- rep("female",NROW(f_wdSE))
wdSE <- rbind(m_wdSE,f_wdSE)
pdf("Best5p_strength.pdf", pointsize = 12, width = 10 , height = 7 )
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
dev.off()
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
head(wdSE)
head(m_wdeg[,1:5])
m_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
f_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_females_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
head(m_wdeg[,1:5])
m_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
w_deg
m_wdeg
m_wdeg[is.na(na.omit(m_wdeg))]
m_wdeg
m_wdegx <- m_wdeg(na.omit(m_wdeg))
m_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
f_wdeg <- read.table(paste(files.path,'OTU_best5p/OTUp_females_best5p_wdegree_st.txt',sep=''),header=T,sep="\t")
m_wdm <- apply(m_wdegx[2:ncol(m_wdegx)],1,mean)
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
head(m_wdm)
head(mwdegt)
head(m_wdegt)
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"))
m_wdSE
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
m_wdSE
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
#f_wdeg[is.na(f_wdeg)] <- 0
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdSE <- summarySE(f_wdegt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
f_wdSE$"gender" <- rep("female",NROW(f_wdSE))
wdSE <- rbind(m_wdSE,f_wdSE)
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
colnames(wdSE) <- c("WinAge","NumOTUs","aveStrength","stdDev","stdError","ConfInterv","Gender")
write.table(wdSE,file="Best5p_strength_Stats.txt",sep="\t",row.names=FALSE)
wdSE
m_clus <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_clustcoef.txt',sep=''),header=T,sep="\t")
f_clus <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_clustcoef.txt',sep=''),header=T,sep="\t")
m_clus <- read.table(paste(files.path,'OTU_best5p/OTUp_males_best5p_clustcoef.txt',sep=''),header=T,sep="\t")
f_clus <- read.table(paste(files.path,'OTU_best5p/OTUp_females_best5p_clustcoef.txt',sep=''),header=T,sep="\t")
head(m_clus[,1:5])
m_clSE <- summarySE(m_clt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
m_clt <- melt(m_clos,id.vars=c("X"))
m_clt <- melt(m_clus,id.vars=c("X"))
m_clSE <- summarySE(m_clt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
m_clSE$"gender" <- rep("male",NROW(m_clSE))
f_clt <- melt(f_clus,id.vars=c("X"))
f_clSE <- summarySE(f_clt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
f_clSE$"gender" <- rep("female",NROW(f_clSE))
clSE <- rbind(m_clSE,f_clSE)
ggplot(data=clSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of closeness")+xlab("Window age mean")+
ggtitle("Closeness")+geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
ggplot(data=clSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of clustering")+xlab("Window age mean")+
ggtitle("average Clustering Coeficient")+geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
ggplot(data=clSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of clustering")+xlab("Window age mean")+
ggtitle("Clustering Coeficient")+geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
m_wdm <- apply(m_wdeg[2:ncol(m_wdeg)],1,mean)
m_wdegt <- melt(m_wdeg,id.vars=c("X"))
m_wdSE <- summarySE(m_wdegt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
m_wdSE$"gender" <- rep("male",NROW(m_wdSE))
#f_wdeg[is.na(f_wdeg)] <- 0
f_wdm <- apply(f_wdeg[2:ncol(f_wdeg)],1,mean)
f_wdegt <- melt(f_wdeg,id.vars=c("X"))
f_wdSE <- summarySE(f_wdegt,measurevar="value",groupvars=c("X"),na.rm=TRUE)
f_wdSE$"gender" <- rep("female",NROW(f_wdSE))
wdSE <- rbind(m_wdSE,f_wdSE)
ggplot(data=wdSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of strength")+xlab("Window age mean")+
ggtitle("Strength")+
geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
ggplot(data=clSE,aes(X,value,color=gender))+geom_line()+geom_point()+
ylab("Mean of clustering")+xlab("Window age mean")+
ggtitle("Clustering Coeficient")+geom_errorbar(aes(ymin=value-se, ymax=value+se), width=.1)
View(m_clt)
f1 <- '~/Documents/Projects/ExomeChip/results/010915/exomezIQC_MQC_controls_commons.hwe'#commandArgs()[6]#
all <-read.table(f1, header=T,as.is=T)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["BONF"] <- p.adjust(p.hwe.cont$"P",method="bonferroni",n=NROW(p.hwe.cont))
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
jpeg(sprintf("%s_controls.jpg",f1), res=300, width=10, height=5, units="in")
#par(mfrow=c(1,2))
plot(p.hwe.cont$x,p.hwe.cont$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - Controls",pch=20)
#with(subset(p.hwe.cont,p.hwe.cont$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2)
pv <- subset(p.hwe.cont,p.hwe.cont$BONF<=0.05)$SNP
dev.off()
plot(p.hwe.cont$x,p.hwe.cont$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - Controls",pch=20)
#with(subset(p.hwe.cont,p.hwe.cont$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2)
plot(p.hwe.case$x,p.hwe.case$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - Cases",pch=20)
p.hwe.case <- subset(all,all$"TEST"=="AFF")
p.hwe.case["BONF"] <- p.adjust(p.hwe.case$"P",method="bonferroni",n=NROW(p.hwe.case))
p.hwe.case["y"] <- -log10(p.hwe.case$"P")
p.hwe.case <- p.hwe.case[order(p.hwe.case$y),]
p.hwe.case["x"] <- sort(-log10(ppoints(p.hwe.case$"P"))) #expected pvalue list
plot(p.hwe.case$x,p.hwe.case$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - Cases",pch=20)
p.hwe.case
p.hwe.cont
head(p.hwe.cont)
all <-read.table(f1, header=T,as.is=T)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["BONF"] <- p.adjust(p.hwe.cont$"P",method="bonferroni",n=NROW(p.hwe.cont))
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
head(all)
f1 <- '/home/torres/Documents/Projects/ExomeChip/results/28_01_16/HWE/data.iqc.lmiss.hardy.hwe'#commandArgs()[6]#
all <-read.table(f1, header=T,as.is=T)
head(all)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["BONF"] <- p.adjust(p.hwe.cont$"P",method="bonferroni",n=NROW(p.hwe.cont))
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
head(p.hwe.cont)
p.hwe.cont
p.hwe.cont
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["BONF"] <- p.adjust(p.hwe.cont$"P",method="bonferroni",n=NROW(p.hwe.cont))
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
p.hwe.case <- subset(all,all$"TEST"=="AFF")
p.hwe.case["BONF"] <- p.adjust(p.hwe.case$"P",method="bonferroni",n=NROW(p.hwe.case))
p.hwe.case["y"] <- -log10(p.hwe.case$"P")
p.hwe.case <- p.hwe.case[order(p.hwe.case$y),]
p.hwe.case["x"] <- sort(-log10(ppoints(p.hwe.case$"P"))) #expected pvalue list
head(p.hwe.case)
plot(p.hwe.case$x,p.hwe.case$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - Cases",pch=20)
head(all)
plot(p.hwe.case$"O.HET.",p.hwe.case$"E.HET.",ylab="Observed",xlab="Expected",main="HWE-test QQplot - Cases",pch=20)
abline(a=0,b=1,lty=2)
plot(p.hwe.cont$"O.HET.",p.hwe.cont$"E.HET.",ylab="Observed",xlab="Expected",main="HWE-test QQplot - Controls",pch=20)
#with(subset(p.hwe.cont,p.hwe.cont$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2)
par(mfrow=c(1,2))
plot(p.hwe.cont$"O.HET.",p.hwe.cont$"E.HET.",ylab="Observed",xlab="Expected",main="HWE-test QQplot - Controls",pch=20)
#with(subset(p.hwe.cont,p.hwe.cont$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2,col='red')
plot(p.hwe.case$"O.HET.",p.hwe.case$"E.HET.",ylab="Observed",xlab="Expected",main="HWE-test QQplot - Cases",pch=20)
abline(a=0,b=1,lty=2,col='red')
par(mfrow=c(1,2))
plot(p.hwe.cont$"O.HET.",p.hwe.cont$"E.HET.",ylab="Observed",xlab="Expected",main="HWE-test QQplot - Controls",pch=20)
with(subset(p.hwe.cont,p.hwe.cont$BONF<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2,col='red')
plot(p.hwe.case$"O.HET.",p.hwe.case$"E.HET.",ylab="Observed",xlab="Expected",main="HWE-test QQplot - Cases",pch=20)
with(subset(p.hwe.case,p.hwe.case$BONF<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2,col='red')
library(ggplot2)
suppressPackageStartupMessages(require(optparse))
option_list<- list(
make_option(c("-f", "--freq"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.frq", #NA,
help="Frequency file name"),
make_option(c("-w", "--hwe"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.hwe",#NA,
help="HWE-test file"),
make_option(c("-m", "--model"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.model",#NA,
help="model association file"),
make_option(c("-a", "--adjusted"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.assoc.adjusted",#NA,
help="File of adjusted association-test"),
make_option(c("-s", "--assoc"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.assoc",#NA,
help="File of adjusted association-test"),
make_option(c("-o", "--out"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p_out",#NA,
help="Out file prefix")
)
opt = parse_args(OptionParser(option_list=option_list))
if (class(try(if(!is.na(opt$freq)){},T)) == "try-error"){cat(paste("Frequency file has not been detected.\n",sep=""))}else{
#if (!is.na(opt$f)){
maf<-read.table(opt$f,h=T,as.is=T)
jpeg(sprintf("%s.jpg",opt$f), res=300, width=10, height=5, units="in")
plot(sort(maf$'MAF'),ylab='MAF',xlab=sprintf("SNPs (%d)",NROW(maf)), main='Minor Allele Frequency',pch=20)
with(subset(maf,maf$'MAF'<=0.2),text(sort(MAF), labels=SNP, cex=0.6, pos=4, col="red"))
dev.off()
cat(paste(sprintf("%s.jpg",opt$f)," was successfully generated.\n",sep=""))
}
if (class(try(if (!is.na(opt$hwe)){},T)) == "try-error"){cat(paste("HWE-Test file was not detected.\n",sep=""))}else{
#if (!is.na(opt$hwe)) {
all <-read.table(opt$hwe, header=T,as.is=T)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
p.hwe.case <- subset(all,all$"TEST"=="AFF")
p.hwe.case["y"] <- -log10(p.hwe.case$"P")
p.hwe.case <- p.hwe.case[order(p.hwe.case$y),]
p.hwe.case["x"] <- sort(-log10(ppoints(p.hwe.case$"P"))) #expected pvalue list
plot(p.hwe$x,p.hwe$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - All indiv.",pch=20)
with(subset(p.hwe,p.hwe$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2)
}
suppressPackageStartupMessages(require(optparse))
option_list<- list(
make_option(c("-f", "--freq"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.frq", #NA,
help="Frequency file name"),
make_option(c("-w", "--hwe"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.hwe",#NA,
help="HWE-test file"),
make_option(c("-m", "--model"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.model",#NA,
help="model association file"),
make_option(c("-a", "--adjusted"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.assoc.adjusted",#NA,
help="File of adjusted association-test"),
make_option(c("-s", "--assoc"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p.assoc",#NA,
help="File of adjusted association-test"),
make_option(c("-o", "--out"), action="store", type='character', #default="/home/torres/Documents/Projects/SQM/results/100plus/100p_out",#NA,
help="Out file prefix")
)
opt = parse_args(OptionParser(option_list=option_list))
if (class(try(if(!is.na(opt$freq)){},T)) == "try-error"){cat(paste("Frequency file has not been detected.\n",sep=""))}else{
#if (!is.na(opt$f)){
maf<-read.table(opt$f,h=T,as.is=T)
jpeg(sprintf("%s.jpg",opt$f), res=300, width=10, height=5, units="in")
plot(sort(maf$'MAF'),ylab='MAF',xlab=sprintf("SNPs (%d)",NROW(maf)), main='Minor Allele Frequency',pch=20)
with(subset(maf,maf$'MAF'<=0.2),text(sort(MAF), labels=SNP, cex=0.6, pos=4, col="red"))
dev.off()
cat(paste(sprintf("%s.jpg",opt$f)," was successfully generated.\n",sep=""))
}
if (class(try(if (!is.na(opt$hwe)){},T)) == "try-error"){cat(paste("HWE-Test file was not detected.\n",sep=""))}else{
#if (!is.na(opt$hwe)) {
all <-read.table(opt$hwe, header=T,as.is=T)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
p.hwe.case <- subset(all,all$"TEST"=="AFF")
p.hwe.case["y"] <- -log10(p.hwe.case$"P")
p.hwe.case <- p.hwe.case[order(p.hwe.case$y),]
p.hwe.case["x"] <- sort(-log10(ppoints(p.hwe.case$"P"))) #expected pvalue list
jpeg(sprintf("%s_all.jpg",opt$hwe), res=300, width=10, height=5, units="in")
plot(p.hwe$x,p.hwe$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - All indiv.",pch=20)
with(subset(p.hwe,p.hwe$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
}
all <-read.table(opt$hwe, header=T,as.is=T)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
p.hwe.case <- subset(all,all$"TEST"=="AFF")
p.hwe.case["y"] <- -log10(p.hwe.case$"P")
p.hwe.case <- p.hwe.case[order(p.hwe.case$y),]
p.hwe.case["x"] <- sort(-log10(ppoints(p.hwe.case$"P"))) #expected pvalue list
plot(p.hwe$x,p.hwe$y,ylab="Observed",xlab="Expected",main="HWE-test QQplot - All indiv.",pch=20)
with(subset(p.hwe,p.hwe$P<=0.05),text(y~x, labels=SNP, cex=0.6, pos=1, col="red"))
abline(a=0,b=1,lty=2)
f1 <- '/home/torres/Documents/Projects/ExomeChip/results/28_01_16/HWE/data.iqc.lmiss.hardy.hwe'#commandArgs()[6]#
all <-read.table(f1, header=T,as.is=T)
p.hwe <- subset(all, all$"TEST"=="ALL")
p.hwe["y"] <- -log10(p.hwe$"P")
p.hwe <- p.hwe[order(p.hwe$y),]
p.hwe["x"] <- sort(-log10(ppoints(p.hwe$"P")))#expected pvalue list
p.hwe.cont <- subset(all,all$"TEST"=="UNAFF")
p.hwe.cont["BONF"] <- p.adjust(p.hwe.cont$"P",method="bonferroni",n=NROW(p.hwe.cont))
p.hwe.cont["y"] <- -log10(p.hwe.cont$"P")
p.hwe.cont <- p.hwe.cont[order(p.hwe.cont$y),]
p.hwe.cont["x"] <- sort(-log10(ppoints(p.hwe.cont$"P")))#expected pvalue list
p.hwe.case <- subset(all,all$"TEST"=="AFF")
p.hwe.case["BONF"] <- p.adjust(p.hwe.case$"P",method="bonferroni",n=NROW(p.hwe.case))
p.hwe.case["y"] <- -log10(p.hwe.case$"P")
p.hwe.case <- p.hwe.case[order(p.hwe.case$y),]
p.hwe.case["x"] <- sort(-log10(ppoints(p.hwe.case$"P"))) #expected pvalue list
par(mfrow=c(1,2))
plot(p.hwe.cont$"O.HET.",p.hwe.cont$"E.HET.",ylab="Observed",xlab="Expected",
main="HWE-test QQplot - Controls",pch=20,col=ifelse(p.hwe.cont$BONF<=0.05,"red","black"))
abline(a=0,b=1,lty=2,col='red')
plot(p.hwe.case$"O.HET.",p.hwe.case$"E.HET.",ylab="Observed",xlab="Expected",
main="HWE-test QQplot - Cases",pch=20,col=ifelse(p.hwe.cont$BONF<=0.05,"red","black"))
abline(a=0,b=1,lty=2,col='red')
pv <- subset(p.hwe.cont,p.hwe.cont$BONF<=0.05)$SNP
head(pv)
length(pv)
cont_fails <- subset(p.hwe.cont,p.hwe.cont$BONF<=0.05)$SNP
case_fails <- subset(p.hwe.case,p.hwe.case$BONF<=0.05)$SNP
length(cont_fails)
length(case_fails)
plot(p.hwe.cont$"O.HET.",p.hwe.cont$"E.HET.",ylab="Observed",xlab="Expected",
main="HWE-test QQplot - Controls",pch=20,col=ifelse(p.hwe.cont$BONF<=0.05,"red","black"))
abline(a=0,b=1,lty=2,col='red')
plot(p.hwe.case$"O.HET.",p.hwe.case$"E.HET.",ylab="Observed",xlab="Expected",
main="HWE-test QQplot - Cases",pch=20,col=ifelse(p.hwe.case$BONF<=0.05,"red","black"))
abline(a=0,b=1,lty=2,col='red')
fails  <- cont_fails+case_fails
fails  <- cat(cont_fails,case_fails)
fails  <- merge(cont_fails,case_fails)
length(fails)
fails  <- c(cont_fails,case_fails)
length(fails)
head(p.hwe.cont)
bonf <- c(p.hwe.cont$BONF,p.hwe.case$BONF)
head(bonf)
hist(bonf)
hist(bonf,main="HWE test P value",xlab="P value")
hist(bonf,main="HWE test corrected P value (Bonf.)",xlab="P value")
opt$hwe
length(unique(fails))
